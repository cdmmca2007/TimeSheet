# To change this template, choose Tools | Templates
# and open the template in the editor.
TEST=select 1 from dual
#drop down
GET_ROLES=select id id,name text from roles
GET_DESIGNATION=SELECT id id,designation text FROM designation
GET_GROUP=SELECT id, group_dept_name text FROM deptgroup WHERE deleted=0; 
GET_RESOURCE=select userId id, CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(fname,' '),CASE WHEN mname IS NULL THEN '' ELSE mname END),' '),lname),' - '),empno) text from users where deleted=0
GET_ACTIVITIES=SELECT activityid id, concat(concat(activityname,' - '),activitycode) text  FROM activity
GET_MANAGER=select userId id, concat(concat(CONCAT(CONCAT(CONCAT(CONCAT(fname,' '),CASE WHEN mname IS NULL THEN '' ELSE mname END),' '),lname),' - '),empno) text from users where roleid=2 and deleted=0
GET_PROJ_LOC=SELECT locationid id, locationname text from projectlocation

VERIFY_USER =SELECT users.userid,users.mname,users.lname,users.roleid, users.fname,users.emailid from users  inner join userlogin on users.userid = userlogin.userid inner join roles on users.roleid = roles.id where username=:username and PASSWORD=:PASSWORD
GET_USERS =SELECT u.empno,userlogin.username AS userName, u.userid AS userId,'' AS  sal,CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) AS fullName ,        u.fname AS fname ,u.lname AS lname ,u.mname AS mname ,u.emailid AS emailId,u.contactno AS contactNo,       u.designation AS designation,d.designation AS designationname, u.address AS address ,roles.name AS rolename, u.roleid AS roleId, u.gender, u.city, u.dob , u.managerid ,CONCAT(CONCAT(CONCAT(CONCAT(m.fname,' '),CASE WHEN m.mname IS NULL THEN '' ELSE m.mname END),' '),m.lname)  AS managername,       dg.group_dept_name AS deptgroupname,u.groupdept , u.baserate AS baseRate,u.personalEmail,u.emergencyNo,u.doj,u.lwd,u.superrate  AS  superRate ,m.value  AS  superRateVal , u.superfund, u.tfnno, u.accountno, u.bsbno,u.homephone,u.spousename FROM users u  INNER JOIN roles ON u.roleid=roles.id   INNER JOIN userlogin ON u.userid = userlogin.userid AND userlogin.status=1   AND deleted=0   INNER JOIN roles r ON r.id=u.roleid  INNER JOIN (SELECT m.value , m.id FROM master m , properties p WHERE p.id=m.propertyid AND p.id=5) m ON m.id=u.superrate left JOIN designation d ON d.id=u.designation LEFT JOIN deptgroup dg ON dg.id=u.groupdept  LEFT  OUTER JOIN users m ON u.managerid=m.userid and u.deleted=0
ADD_USER =INSERT INTO users (userid,fname,mname,lname,dob,emailid,contactno,address,city,gender,createdon,createdby,designation,roleid,managerid,empno,personalemail,emergencyno,groupdept,doj,lwd,baserate,superrate,superfund, tfnno, accountno, bsbno,homephone,spousename) values (:userId,:fname, :mname, :lname, :dob, :emailId,:contactNo,:address, :city, :gender, :createdOn, :createdBy, :designation, :roleId,:managerid,:empno,:personalEmail,:emergencyNo,:groupdept,:doj,:lwd,:baseRate,:superRate,:superfund, :tfnno, :accountno, :bsbno,:homephone,:spousename)
ADD_USER_LOGIN=INSERT INTO userlogin (userid, username, password, status) VALUES(:userId, :username, :password,:status)
EDIT_USER =UPDATE users SET fname = :fname, mname = :mname, lname = :lname, dob = :dob, emailid = :emailId, contactno = :contactNo, address = :address, city = :city, gender = :gender, modifiedby = :modifiedby, designation = :designation, 	roleid = :roleId , managerid=:managerid, personalemail=:personalEmail,emergencyno=:emergencyNo,groupdept=:groupdept,doj=:doj,lwd=:lwd,baserate=:baseRate,superrate=:superRate , superfund = :superfund , tfnno = :tfnno , accountno = :accountno , bsbno = :bsbno , homephone = :homephone , spousename = :spousename , empno=:empno  WHERE userid=:userId
DELETE_USER =UPDATE users SET deleted = :deleted, deletedon = :deletedon, deletedby = :deletedby WHERE userid=:userid
DISABLE_USER =UPDATE userlogin SET status=:status,diactivatedby=:diactivatedby ,diactivatedon=:diactivatedon  where userid=:userid
CHANGE_PASSWORD =UPDATE userlogin set PASSWORD=:newpassword , passwordchangedby=:passwordchangedby , passwordchangedon=current_date where userid=:userid and PASSWORD=:oldpassword
ADMIN_CHANGE_PASSWORD =UPDATE userlogin set PASSWORD=:newpassword , passwordchangedby=:passwordchangedby , passwordchangedon=:passwordchangedon where userid=:userId
#project
ADD_PROJ =INSERT INTO project (projectid,projectname,projectcode,description,startdate,enddate,clientname,projectstatus,projectpriority,projecttype,projectmanagerid,createdby,createdon,modifiedby , projectValue) VALUES (:projectId, :projectName,:projectCode, :description, :startDate, :endDate, :clientName,:projectStatus, :projectPriority,:projectType, :projectManager, :createdBy, :createdOn, :modifiedBy, :projectValue)
ADD_PROJ_MEMBER =INSERT INTO projectmember (resourceid,projectid, userid, role, startdate, lastdate, createdby, createdon, modifiedby)VALUES(:resourceId,:projectId, :userId,1,:startDate, :endDate, :createdBy, :createdOn, :modifiedBy)
ADD_PROJ_ACT =insert into projectactivity (projectid,activityid,tot_hour,description,createdby,createdon,modifiedby,modifiedon) values(:projectId,:activityId,:tot_hour,:comment,:createdBy,:createdOn,:modifiedBy,:modifiedOn)
EDIT_PROJ_MEM_DETIAL=UPDATE projectmember SET role = :roleId, startdate = :startDate, lastdate =:endDate, modifiedby = :modifiedBy, COMMENT = :comment  	WHERE resourceid=:resourceId and projectid = :projectId AND userid = :userId
DEL_PROJ_RESOURCE=update projectmember set deleted=:deleted , deletedBy=:deletedBy , deletedOn=:deletedOn where resourceid=:resourceId

EDIT_PROJ_ACT =update projectactivity set tot_hour=:tot_hour,description=:comment ,modifiedby=:modifiedBy ,modifiedon=:modifiedOn where projectid=:projectId and activityid=:activityId
CHK_PROJ_ACT  =SELECT * FROM timesheetdetail WHERE projectid=:projectId AND activityid=:activityId
DEL_PROJ_ACT  =delete from projectactivity WHERE projectid=:projectId AND activityid=:activityId
CHK_PRE_PROJ_ACT=select * from projectactivity WHERE projectid=:projectId AND activityid=:activityId
ADD_PROJ_MEM_DETIAL=INSERT INTO projectmember (resourceid,projectid, userid, role, startdate, lastdate, createdby, createdon, modifiedby,comment)	VALUES	(:resourceId,:projectId, :userId, :roleId, :startDate, :endDate, :createdBy, :createdOn, :modifiedBy,:comment)

USER_EMAIL_ID= SELECT emailid FROM users WHERE userid=:userid
EDIT_PROJ=UPDATE project SET projectname = :projectName , projectcode = :projectCode , description = :description , startdate = :startDate , enddate = :endDate,	clientname = :clientName , projectpriority = :projectPriority , projectstatus = :projectStatus , projecttype = :projectType , projectmanagerid = :projectManager , modifiedby = :modifiedBy  , projectValue=:projectValue WHERE projectid = :projectId
DEL_PROJ=UPDATE project SET deleted = :deleted , modifiedby=:modifiedBy , deletedby=:deletedBy ,  deletedon=:deletedOn WHERE projectid = :projectId
GET_PROJECTS=SELECT  p.projectid projectId, p.projectname projectName, p.projectcode projectCode, p.description, p.startdate startDate, p.enddate endDate, p.iscompleted isCompleted, 	p.clientname clientName, p.projectpriority projectPriority, p.projectstatus projectStatus,m.value AS projStatusname,p.projecttype projectType,p.projectmanagerid as projectManager,CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) AS projectManagername,p.projectvalue,p.createdBy,p.modifiedBy,p.createdOn  FROM  project p  LEFT JOIN users u  ON u.userid=p.projectmanagerid  LEFT JOIN master m ON m.id=p.projectstatus where p.deleted=0
GET_PROJECT=SELECT  p.projectid projectId, p.projectname projectName, p.projectcode projectCode, p.description, p.startdate startDate, p.enddate endDate, p.iscompleted isCompleted, 	p.clientname clientName, p.projectpriority projectPriority,m1.value as priorityName, p.projectstatus projectStatus,m.value AS projStatusname,p.projecttype projectType,m2.value as projectTypeName,p.projectmanagerid as projectManager,CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) AS projectManagername, p.createdBy,p.modifiedBy,p.createdOn , p.projectvalue  FROM  project p  LEFT JOIN users u  ON u.userid=p.projectmanagerid  LEFT JOIN master m ON m.id=p.projectstatus left join master m1 on p.projectpriority = m1.id left join master m2 on p.projecttype=m2.id where p.projectid = ?
GET_USER_PROJECTS=SELECT p.projectname projectName, p.projectcode projectCode, p.projectid projectId, p.startDate , p.enddate endDate, p.projectstatus projectStatus FROM projectmember pm INNER JOIN project p ON pm.projectid=p.projectid   AND pm.userid=:userId  AND p.enddate > :endDate   AND p.iscompleted=0
#fr admin full detail
GET_USER_PROJECTS_ADMIN=SELECT p.projectname projectName, p.projectcode projectCode, p.projectid projectId, p.startDate , p.enddate endDate, p.projectstatus projectStatus FROM projectmember pm INNER JOIN project p ON pm.projectid=p.projectid   AND  p.enddate > :endDate   AND p.iscompleted=0 and p.deleted=0
GET_MANAGERS_PROJECTS=SELECT p.projectname projectName, p.projectcode projectCode, p.projectid projectId, p.startDate , p.enddate endDate, p.projectstatus projectStatus FROM projectmember pm INNER JOIN project p ON pm.projectid=p.projectid   where pm.userid in (select userid FROM users where managerid=:userId)  AND p.enddate > :endDate   AND p.iscompleted=0
GET_PROJ_MEMBER=SELECT pm.resourceid as resourceId,pm.projectid projectId, u.userid userId,CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) userName, pm.role, pm.startDate,       pm.lastdate endDate , d.designation , pm.comment FROM projectmember pm INNER JOIN users u ON pm.userid = u.userid LEFT OUTER JOIN designation d ON u.designation=d.id WHERE pm.projectid =? AND pm.deleted=0
GET_PROJ_ACTIVITY=SELECT a.*, pa.tot_hour , pa.tot_hour,pa.modifiedby AS modified_by, pa.modifiedon AS modified_on , pa.description as comment FROM projectactivity pa  JOIN activity a ON a.activityid =pa.activityid   AND projectid=:projectId and pa.deleted=0
GET_PROJ_PRTY=SELECT id ,VALUE AS text FROM master WHERE propertyid=1
GET_PROJ_TYP =SELECT id ,VALUE AS text FROM master WHERE propertyid=2
GET_SUPERRATE_PERCNT=SELECT id ,VALUE AS text FROM master WHERE propertyid=5
GET_ALL_PROJECT_MANAGER=select userId id, CONCAT(CONCAT(CONCAT(CONCAT(fname,' '),CASE WHEN mname IS NULL THEN '' ELSE mname END),' '),lname) text from users where designation=1
GET_PROJ_STATUS=SELECT id ,VALUE AS text FROM master WHERE propertyid=3
GET_PROJECTS_ACTIVITY_REPORT=SELECT td.projectid , td.activityid , pa.tot_hour as activity_tot_hour ,td.locationid ,p.projectname,a.activityname ,pl.locationname, SUM(td.mon + td.tues + td.wed + td.thurs + td.fri) tot_hour FROM timesheet t JOIN timesheetlog tl ON t.id=tl.tsid AND t.status=6 JOIN timesheetdetail td ON td.tsid=tl.id AND td.projectid=:projectid INNER JOIN projectlocation pl ON pl.locationid=td.locationid  INNER JOIN projectactivity pa ON pa.activityid=td.activityid and pa.deleted=0  INNER JOIN activity a         ON a.activityid=pa.activityid INNER JOIN project p ON p.projectid=td.projectid  GROUP BY td.activityid,td.locationid 
#Timesheet
GET_TIMESHEETS=SELECT * from timesheet
GET_USER_TIMESHEET=SELECT * from timesheet where userid=:userId
GET_MGR_TIMESHEET=SELECT t.*,CONCAT(CONCAT(CONCAT(CONCAT(fname,' '),CASE WHEN mname IS NULL THEN '' ELSE mname END),' '),lname) userName FROM timesheet t INNER JOIN users u ON  t.userid=u.userid WHERE u.managerId=:userId
GET_ADM_TIMESHEET=SELECT t.*,CONCAT(CONCAT(CONCAT(CONCAT(fname,' '),CASE WHEN mname IS NULL THEN '' ELSE mname END),' '),lname) userName FROM timesheet t INNER JOIN users u ON  t.userid=u.userid
GET_TIMESHEET_LOG =SELECT tl.tsid,CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) actionBy,tl.actionon actionOn,tl.oldstatus oldStatus,tl.newstatus newStatus,tl.comment,tl.id vId,tl.version FROM timesheetlog tl join users u on u.userid=tl.actionby WHERE tl.tsid=? ORDER BY tl.VERSION desc
GET_TIMESHEET_DETAIL =SELECT * FROM timesheetdetail WHERE tsid=?
DEL_TIMESHEET_DETAIL =DELETE FROM timesheetdetail WHERE tsid=?
UPDATE_TIMESHEET=UPDATE timesheet SET STATUS=? WHERE id=?
ADD_TIMESHEET_DETAIL=INSERT INTO timesheetdetail(tsid,mon,tues,wed,thurs,fri,sat,sun,description,projectId,activityId,locationid) VALUES(:tsid,:mon,:tues,:wed,:thurs,:fri,:sat,:sun,:description,:projectId,:activityId,:locationId)
ADD_TIMESHEET_LOG =INSERT INTO timesheetlog(id,version,tsid,actionby,actionon,oldstatus,newstatus,comment) VALUES(?,?,?,?,?,?,?,?)
UPDATE_TIMESHEET_LOG=UPDATE timesheetlog set version=?,actionby=?,actionon=?,oldstatus=?,newstatus=?,comment=? where id=?

GET_PROJECT_ROLES=SELECT id ,VALUE AS text FROM master WHERE propertyid=4
GET_LOCATION=SELECT locationid AS id ,CONCAT(CONCAT(locationname,' - '),locationcode) AS text FROM projectlocation WHERE deleted=0
GET_EMP_LIST=SELECT userid FROM users WHERE deleted=0 AND userid NOT IN (SELECT userid FROM timesheet WHERE  fromdate=:fromdate AND todate=:todate)
INSRT_TIMESHEET=INSERT INTO timesheet (id, fromdate, todate, STATUS, userid, createdon, createdby, modifiedBy)VALUES (:id, :fromDate, :toDate, :status, :userId, :createdOn, :createdBy, :modifiedBy)

GET_DATE_COMBO=SELECT CONCAT(CONCAT(dat.fromdate ,'-'), dat.todate) id,CONCAT(CONCAT(FROM_UNIXTIME(dat.fromdate/1000,'%d-%m-%Y') ,' / '), FROM_UNIXTIME(dat.todate/1000,'%d-%m-%Y')) text  FROM (    SELECT DISTINCT fromdate , todate  FROM timesheet WHERE FROM_UNIXTIME(fromdate/1000) > DATE_SUB(CURRENT_DATE, INTERVAL 60 DAY) ORDER BY fromdate) dat
GET_DATE_COMBO1=SELECT dat.fromdate startDate, dat.todate endDate,CONCAT(CONCAT(FROM_UNIXTIME(dat.fromdate/1000,'%d-%m-%Y') ,' / '), FROM_UNIXTIME(dat.todate/1000,'%d-%m-%Y')) text  FROM (    SELECT DISTINCT fromdate , todate  FROM timesheet WHERE FROM_UNIXTIME(fromdate/1000) > DATE_SUB(CURRENT_DATE, INTERVAL 60 DAY) ORDER BY fromdate) dat
GET_ACCOUNTANT_REPORT=SELECT u.empno,t.id,t.userid,case when t.status=4 then 'Submitted' when t.status=6 then 'Approved' when t.status=0 then 'Pending' when t.status=5 then 'Rejected' end as status ,SUM(td.mon) AS mon , SUM(td.tues) AS tues, SUM(td.wed) AS wed, SUM(td.thurs) AS thurs, SUM(td.fri) AS fri,SUM(td.sat) AS sat, SUM(td.sun) AS sun,        SUM(td.mon + td.tues + td.wed + td.thurs + td.fri) tot_hour ,        CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) userName        FROM timesheet t    LEFT JOIN timesheetlog tl    ON t.id=tl.tsid AND tl.newstatus=4 AND tl.version=(SELECT MAX(tl1.version)-1 FROM timesheetlog tl1 WHERE tl1.tsid=t.id)  LEFT JOIN timesheetdetail td ON td.tsid=tl.id    JOIN users u ON u.userid=t.userid  WHERE t.fromdate=:fromdate AND t.todate=:todate GROUP BY t.id , t.userid   
GET_TS_REP_FOR_USER_FOR_WEEK=SELECT t.id,t.userid,t.status,SUM(td.mon) AS mon , SUM(td.tues) AS tues, SUM(td.wed) AS wed, SUM(td.thurs) AS thurs, SUM(td.fri) AS fri,SUM(td.sat) AS sat, SUM(td.sun) AS sun,        SUM(td.mon + td.tues + td.wed + td.thurs + td.fri) tot_hour ,        CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) userName        FROM timesheet t    LEFT JOIN timesheetlog tl    ON t.id=tl.tsid AND tl.newstatus=4 AND tl.version=(SELECT MAX(tl1.version)-1 FROM timesheetlog tl1 WHERE tl1.tsid=t.id)  LEFT JOIN timesheetdetail td ON td.tsid=tl.id    JOIN users u ON u.userid=t.userid  WHERE t.fromdate=:fromdate AND t.todate=:todate and t.userid=:userid  GROUP BY t.id , t.userid   

GET_MAIL_TEMP=select * from mail_template where template_id=:templateid

GET_USER_DETAIL=SELECT CONCAT(CONCAT(CONCAT(CONCAT(fname,' '),CASE WHEN mname IS NULL THEN '' ELSE mname END),' '),lname) empname,       emailid   FROM users WHERE userid=:userId
GET_DETAILS_FROM_TSID=SELECT CONCAT(CONCAT(FROM_UNIXTIME(t.fromdate/1000,'%d-%m-%Y') ,' / '), FROM_UNIXTIME(t.todate/1000,'%d-%m-%Y')) AS dateweek,       CONCAT(CONCAT(CONCAT(CONCAT(emp.fname,' '),CASE WHEN emp.mname IS NULL THEN '' ELSE emp.mname END),' '),emp.lname) AS empname,       emp.emailid AS empemailid,CONCAT(CONCAT(CONCAT(CONCAT(mgr.fname,' '),CASE WHEN mgr.mname IS NULL THEN '' ELSE mgr.mname END),' '),mgr.lname) AS mgrname, mgr.emailid AS mgremailid  FROM timesheet t  JOIN users emp ON t.userid=emp.userid  JOIN users mgr ON emp.managerid=mgr.userid WHERE t.id=:tsid

GET_MAX_EMP_NO=select max(empno) as empno from users

GET_EMAIL_ID_OFTS_DEFAULTER=SELECT CONCAT(CONCAT(FROM_UNIXTIME(t.fromdate/1000,'%d-%m-%Y') ,' / '), FROM_UNIXTIME(t.todate/1000,'%d-%m-%Y')) v_week,CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) AS empname,       u.emailId,u.empno FROM timesheet t JOIN users u ON u.userid=t.userid WHERE fromdate=(SELECT MAX(t1.fromdate) FROM timesheet t1) AND STATUS < 4 ORDER BY empno


####PMU Report Queries
GET_PROJECT_DETAIL=SELECT projectname , projectcode,clientname ,startdate,enddate FROM project WHERE projectid=?
GET_ACTIVITY_DETAILS=SELECT pa.activityid,CONCAT(CONCAT(a.activitycode,'-'),a.activityname) activity,pa.tot_hour  FROM projectactivity pa  JOIN activity a ON pa.activityid=a.activityid WHERE projectid=?
GET_DATE_LIST=SELECT DISTINCT CONCAT(CONCAT(FROM_UNIXTIME(t.fromdate/1000,'%d-%m-%Y'),' / '),FROM_UNIXTIME(t.todate/1000,'%d-%m-%Y')) as fromdate FROM timesheet t WHERE t.fromdate >= ? AND t.todate <= ? ORDER BY t.fromdate
GET_SUM_DETAILS=SELECT t.fromdate,t.todate,SUM(td.mon + td.tues + td.wed + td.thurs + td.fri) tot_hour FROM timesheet t LEFT JOIN timesheetlog tl ON t.id=tl.tsid AND tl.newstatus=4        AND tl.version=(SELECT MAX(tl1.version)-1 FROM timesheetlog tl1 WHERE tl1.tsid=t.id)  LEFT JOIN timesheetdetail td ON td.tsid=tl.id AND td.projectid=? AND td.activityid=? WHERE t.fromdate >= ?  AND t.todate <= ? GROUP BY t.fromdate,t.todate ORDER BY t.fromdate,t.todate


GET_MANAGER_DETAIL=select * from users where roleid=2
INSERT_ACTUAL_ACTIVTY_PROGRESS=INSERT INTO activityactualprogress (id,projectid,activityid,actualprogress,createdby,comment) VALUES(:id,:projectId,:activityId,:actual_hour,:createdby,:comment)
UPDATE_ACTIVTY_PROGRESS=UPDATE projectactivity 	SET actualprogress = :actual_hour WHERE projectid = :projectId AND activityid = :activityId

GET_PRGRESS_REPORT=SELECT dat.activityid ,dat.activityname,dat.activitycode,dat.tot_hour AS actualplanhour,dat1.tot_ts progpertsbooking,(dat1.tot_ts/dat.tot_hour)*100 AS prog_per_boking_percent,       dat2.actualprogress ,(dat2.actualprogress/((dat1.tot_ts/dat.tot_hour)*100)*100) productivity FROM (SELECT pa.activityid ,a.activityname,a.activitycode,pa.tot_hour , pa.actualprogress FROM projectactivity pa JOIN activity a ON a.activityid=pa.activityid  WHERE pa.projectid=?) dat LEFT JOIN ( SELECT activityid , SUM(mon)+SUM(tues)+SUM(wed)+SUM(thurs)+SUM(fri)+SUM(sat)+SUM(sun) tot_ts  FROM timesheetdetail WHERE projectid=? GROUP BY activityid ) dat1 ON dat.activityid=dat1.activityid LEFT JOIN (SELECT MAX(createddate), activityid,actualprogress   FROM activityactualprogress  WHERE projectid=? GROUP BY activityid) dat2 ON dat2.activityid=dat1.activityid
GET_USER_LIST_FOR_EXCEL_DATA=SELECT u.empno AS Employee_Number,userlogin.username AS User_Name, CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) AS Employee_Name ,       u.emailid AS EmailId,u.contactno AS ContactNo,d.designation AS Designation,roles.name AS Role,       CONCAT(CONCAT(CONCAT(CONCAT(m.fname,' '),CASE WHEN m.mname IS NULL THEN '' ELSE m.mname END),' '),m.lname)  AS Manager_Name,      dg.group_dept_name AS Department,FROM_UNIXTIME(u.doj/1000,'%d-%m-%Y') AS Date_OF_Joining,CASE u.gender WHEN 'M' THEN 'Male' WHEN 'F' THEN 'Female' END AS Gender,       u.city AS City,  FROM_UNIXTIME(u.dob/1000,'%d-%m-%Y') AS Date_Of_Birth,u.personalEmail AS Personal_Email,       u.address AS Address ,u.emergencyNo AS Emergency_ContactNo,       FROM_UNIXTIME(u.lwd/1000,'%d-%m-%Y') AS Last_Working_Date,u.baserate AS BaseRate, m.value  AS  SuperRate ,u.superfund AS SuperFund,       u.tfnno AS TFN_NO,      u.accountno AS Account_No,       u.bsbno AS BSB_NO,       u.homephone AS Home_Phone,       u.spousename AS Spouse_Name  FROM  users u   INNER JOIN roles ON u.roleid=roles.id    INNER JOIN userlogin ON u.userid = userlogin.userid AND userlogin.status=1   AND deleted=0    INNER JOIN roles r ON r.id=u.roleid   INNER JOIN (SELECT m.value , m.id FROM master m , properties p WHERE p.id=m.propertyid AND p.id=5) m ON m.id=u.superrate  LEFT JOIN designation d ON d.id=u.designation  LEFT JOIN deptgroup dg ON dg.id=u.groupdept   LEFT  OUTER JOIN users m ON u.managerid=m.userid AND u.deleted=0
GET_PROJECT_LIST_FOR_EXCEL_DATA=SELECT  p.projectname AS ProjectName, p.projectcode AS ProjectCode, CONCAT(CONCAT(CONCAT(CONCAT(u.fname,' '),CASE WHEN u.mname IS NULL THEN '' ELSE u.mname END),' '),u.lname) AS ProjectManager,        p.projectvalue AS ProjectValue  , p.description AS Description, FROM_UNIXTIME(p.startdate/1000,'%d-%m-%Y') AS StartDate,         FROM_UNIXTIME(p.enddate/1000,'%d-%m-%Y')         AS EndDate,        p.clientname ClientName, m1.value AS ProjectPriority,        m.value AS ProjectStatus,        m2.value AS ProjectType FROM  project p    LEFT  JOIN users u  ON u.userid=p.projectmanagerid    INNER JOIN master m ON   m.id =p.projectstatus   AND m.propertyid=3  LEFT JOIN master m1 ON  m1.id=p.projectpriority AND m1.propertyid=1   LEFT JOIN master m2 ON  m2.id=p.projectType     AND m2.propertyid=2  WHERE p.deleted=0

GET_BUG_STATUS=SELECT id ,VALUE AS text FROM master WHERE propertyid=6

ADD_BUG=INSERT INTO buglist (bugid, title, description, expected, STATUS, priority, createdby, createdon, modifiedby)	VALUES	(:bugid, :title, :description, :expected, :bugstatus, :bugpriority, :createdBy,:createdOn ,:modifiedBy)